py|Основы языка Python
1. Синтаксис языка Python. PEP 8 - руководство по написанию кода на Python.
Что такое PEP8. Основные положения PEP8. Особенности использования синтаксиса. Основные предупреждения (длина строки, отступы, правила наименования, пропуск строк и т.д.).
1. Типы данных в Python.
2. Операторы ветвления и циклов.
Привести пример использования операторов if, else, while, for.
1. Массивы, кортежи, словари.
Что такое массивы, кортежи, словари. Основные различия между массивами, кортежами, словарями. Основные операции с массивами, кортежами, словарями. Примеры итерации по элементам/ключам данных коллекций.
1. Классы.
Что такое классы. Что может содержаться внутри класса. Использование методов: статические методы, просто методы, методы класса.
1. Magic-методы.
        Что такое Magic-методы. Перечислите основные Magic-методы. Зачем используются и как работают Magic-методы. Приведите пример использования Magic-методов.
1. Наследование
        Как работает механизм наследования в Python. Как работает множественное наследование. Порядок вызова методов базового класса, обращение к базовому классу. Как работают “isinstance” и “issubclass”.
1. Модули, пакеты, импорты.
        Что такое модули, пакеты, импорты в Python, для чего они используются, в чем различия между ними. Приведите примеры использования пакетов, модулей и импортов.
1. Исключения.
        Что такое исключения и для чего они используются. Как осуществлять перехват  конкретных и произвольных исключений. Создание собственных исключений. Конструкция raise и примеры ее использования.


py+|Углубленные разделы языка Python
1. Args, kwargs.
Что такое args и kwargs, для чего они используется, в чем различия между ними. Приведите примеры использования args и kwargs, Приведите пример  распаковки списка аргументов.
1. List/dict comprehensions.
        Что такое List/dict comprehensions, для чего они используется. В чем преимущества использования таких конструкций. Приведите примеры использования.
1. Lambda-функции. Функции высших порядков: range, reversed, filter, map, sorted, zip.
        В чем отличие Lambda-функции от обычной функции. Приведите пример  Lambda-функции. Принцип работы функций высших порядков: range, reversed, filter, map, sorted, zip. Приведите примеры использования.
1. Декораторы.
        Что такое декораторы и для чего они используется. Приведите пример декоратора. Приведите пример декоратора с параметрами.
1. Итераторы, генераторы.
        Что такое итераторы и генераторы, для чего они используется, принципы работы. В чем отличие генератора от итератора. Интерфейс итератора. Как осуществляется передача значений в генератор. Напишите пример кода итератора. Напишите пример кода генератора.
1. Контекстные менеджеры.
        Что такое контекстные менеджеры, для чего они используется, принципы работы. Варианты написания контекстных менеджеров. Напишите пример кода  контекстного менеджера.


frontend|HTTP, Frontend
1. Протокол HTTP. Устройство HTTP-запроса и HTTP-ответа.
Виды и примеры заголовков HTTP-запросов и ответов. Статусы ответов HTTP (приведите примеры их применения).
2. Теговая модель HTML.
Теговая модель HTML: теги, атрибуты. Сходства и различия с XML. Основные теги HTML.
3. Технология CSS.
Что такое технология CSS и для чего она используется. Что такое CSS-селекторы, приведите примеры использования. Класс-селекторы, id-селекторы. Псевдоклассы. Блочные элементы, inline-элементы.
4. БЭМ.
Что такое БЭМ, для чего применяется эта технология. Из чего состоит БЭМ. Приведите примеры использования БЭМ.


django|Django
   1. Шаблон проектирования MVC. Реализация шаблона проектирования MVC  в Django.
Что такое шаблон проектирования MVC, какие преимущества дает этот шаблон разработки ПО. Как реализован шаблон проектирования MVC в Django.
   1. Описать модели Django для конкретной предметной области.
        Для заданной предметной области разработайте код моделей, описание атрибутов и связей между моделями.
   1. Для заданных моделей написать код, который выводит всех пользователей.
   2. Для заданных моделей написать код, который получает пользователя с id = 100 или выводит ошибку при его отсутствии.
   3. Для заданных моделей написать код, который выводит 10 первых постов пользователя.
   4. Для заданных моделей написать код, который выводит все комментарии, которые оставляли к постам пользователя, отсортированные по дате добавления.
   5. Для заданных моделей написать код, который считает количество комментариев всех пользователей.
   6. Наследование шаблонов. Примеры использования.
        Для чего применяется наследование шаблонов в Django. Приведите примеры использования.
   1. Миграции в Django
        Что такое миграции в Django, для чего они используются, какую проблему решают.
   1. Шаблонизатор в Django
        Синтаксис шаблонов в Django. Базовый функционал: циклы, условия, фильтры, вызов методов объекта, обращение к атрибутам.
   1. Файл urls.py
        Назначение. Как осуществляется роутинг запросов внутри Django-приложения.
   1. Обработка форм
Описание форм с использованием HTML. Какие инструменты Django предоставляет для автоматической генерации форм. Использование  CSRF_TOKEN. Как производится обработка данных, отправленных через форму.
   1. Авторизация в Web приложениях. Система авторизации в Django.
Авторизация в Web приложениях. Система авторизации в Django. Файлы cookies. Пользовательские сессии. API библиотеки django.contrib.auth.



js|JavaScript
   1. Особенности языка JavaScript, система типов в JavaScript.
Основные отличия языка JavaScript от C++. Основные типы данных языка JavaScript.
   2. Функциональное программирование в JavaScript: функции map, reduce, sort, filter.
Что такое предикат? Сколько аргументов передается в анонимную функцию. Функции map, reduce, sort, filter: принципы работы и примеры использования.
   3. Асинхронное программирование в JavaScript: функции обратного вызова, setTimeout(), setInterval().
Чем асинхронный подход отличается от синхронного? Применение функций обратного вызова - callback’ов. Применение функций setTimeout() и setInterval().
   4. AJAX, Single Page Application: принцип работы, достоинства и недостатки.
Что такое AJAX, для чего используется эта технология? Что такое одностраничное приложение (Single Page Application), достоинства и недостатки этого подхода, отличия Single Page Application от классического веб-приложения.
   5. События в jQuery: подписка, основные поля объекта Event.
Использование событий в технологии jQuery. Какие бывают события? Что такое callback? Как и какую дополнительную информацию можно получить о произошедшем событии. Перечислите основные поля объекта Event.
   6. Объектная модель документа (DOM). Основные API, доступные в JavaScript.
Что такое объектная модель документа (DOM) и для чего она используется.  Объекты верхнего уровня в DOM: Document, Window, Event, объект Console. Их основные поля и методы. Приведите примеры других API, доступных в JavaScript.


ml|Машинное обучение
1. Что такое машинное обучение и какие задачи решает? Три основные задачи машинного обучения - отличия, особенности.
2. Задача регрессии. Линейная регрессия. Функция ошибки линейной регрессии.
3. Градиентный спуск. Описание алгоритма, его особенности.
4. Задача классификации. Логистическая регрессия. Отличие от линейной регрессии. Функция ошибки логистической регрессии. Функция активации, сигмоида.
5. Нейронные сети. Основные понятия, применение. Архитектура нейронных сетей. Отличие от логистической регрессии. Функция активации в нейронных сетях.
6. Решение задачи AND, OR и NOT на основе нейронных сетей.
7. Решение задачи XOR на основе нейронной сети.
8. Задача кластеризации данных. Отличие от задачи классификации. Алгоритм K-means. Определение оптимального числа кластеров.
